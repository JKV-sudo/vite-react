.cube-overlay {
  position: fixed;
  inset: 0;
  z-index: 20000;
  background: radial-gradient(
    1200px 800px at 50% 50%,
    rgba(0, 212, 255, 0.12),
    rgba(0, 0, 0, 0.9)
  );
  pointer-events: none;
}

.cube-scene {
  position: absolute;
  inset: 0;
  margin: auto;
  width: 100vw;
  height: 100vh;
  perspective: 1200px;
  perspective-origin: 50% 50%;
  display: grid;
  place-items: center;
  will-change: transform;
}

.cube {
  position: relative;
  width: min(88vmin, 1100px);
  height: min(88vmin, 1100px);
  transform-style: preserve-3d;
  will-change: transform;
  filter: drop-shadow(0 12px 40px rgba(0, 0, 0, 0.45));
}

:root {
  --cube-half: calc(min(88vmin, 1100px) / 2);
}

.face {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: rgba(10, 10, 12, 0.92);
  border: 1px solid rgba(255, 255, 255, 0.06);
  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.02);
  overflow: hidden;
  display: block;
}

.face > * {
  /* Clone content scales down to fit cube face cleanly */
  transform-origin: top left;
  width: 100%;
  height: 100%;
}

.face-front {
  transform: translateZ(var(--cube-half));
}

.face-right {
  transform: rotateY(90deg) translateZ(var(--cube-half));
}

.face-left {
  transform: rotateY(-90deg) translateZ(var(--cube-half));
}

.face-top {
  transform: rotateX(90deg) translateZ(var(--cube-half));
}

.face-bottom {
  transform: rotateX(-90deg) translateZ(var(--cube-half));
}

@media (prefers-reduced-motion: reduce) {
  .cube-overlay {
    display: none;
  }
}
